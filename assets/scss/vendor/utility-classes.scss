/* =========================================
		Utility Classes
   ========================================= */

@import "../helpers/mixins/clearfix";
@import "../helpers/mixins/nocollapse";
@import "../helpers/mixins/visuallyhidden";

.clearfix {
	@include clearfix;
}

.nocollapse {
	@include nocollapse;
}

.visuallyhidden {
	@include visuallyhidden;
	&--no-js { @include visuallyhidden(no-js); }
	&--focusable { @include visuallyhidden(focusable); }
}
.fullcenter{
	@include flexbox();
	@include flex-flow(row wrap);
	@include justify-content(center);
	@include align-items(center);
	@include align-content(center);
}

@mixin centerer($axis) {
  position: absolute;
  @if $axis == "x" {
	  left: 50%;
	  transform: translate(-50%, 0%);
  }
  
  @else if $axis == "y" {
	  top: 50%;
	  transform: translate(0%, -50%);
  }
  @else{
	  top: 50%;
	  left: 50%;
	  transform: translate(-50%, -50%);
  }
}

@mixin arrow($size,$color,$thick,$direction){
	border: solid $color;
	border-width: 0 $thick $thick 0;
	display: inline-block;
	padding: $size;
	@if $direction == "right"{
		transform: rotate(-45deg);
	}
	@else if $direction == "left"{
		transform: rotate(135deg);
	}
	
	@else if $direction == "up"{
		transform: rotate(-135deg);
	}
	
	@else {
		transform: rotate(45deg);
	}
	transform-origin:$size*2 $size*-1;

}
@mixin rectangle($width, $height, $color) {
	width: $width;
	height: $height;
	background: $color;
}
@mixin square($size, $color) {
	@include rectangle($size, $size, $color);
}
@mixin circle($size, $color) {
	@include square($size, $color);
	border-radius: $size / 2 + 1;
}